#!/bin/bash

__podman_ollama_autocomplete() {
    local current previous commands all_commands models
    COMPREPLY=()
    current="${COMP_WORDS[COMP_CWORD]}"
    previous="${COMP_WORDS[COMP_CWORD-1]}"
    # Top-level commands for 'podman-ollama'.
    commands=(
        'chatbot'
        'open-webui'
        'generate'
        'serve'
        'create'
        'show'
        'run'
        'pull'
        'push'
        'list'
        'ls'
        'cp'
        'rm'
        'help'
    )

    options=(
        '-c' '--container-manager'
        '-g' '--gpu'
        '-h' '--help'
        '-l' '--log'
        '-m' '--model'
        '--privileged'
        '-p' '--publish'
        '-r' '--root'
        '-v' '--version'
        '-'
    )

    all_commands="${commands[*]}"
    all_options="${options[*]}"
    # Provide completions based on context.
    if (( COMP_CWORD == 1 )); then
        # Suggest commands and top-level flags if 'podman-ollama' is the first
        # word.
        COMPREPLY=( $(compgen -W "$all_commands $all_options" -- "$current") )
    elif (( COMP_CWORD > 1 )); then
        # Second-level completions for specific commands without the global -h,
        # --help, -v, --version flags.
        case "${previous}" in
            'serve' | 'start')
                COMPREPLY=( $(compgen -W "-h --help" -- "${current}") )
                ;;
            'create')
                COMPREPLY=( $(compgen -W "-f --file -h --help" -- "${current}") )
                ;;
            'show')
                COMPREPLY=( $(compgen -W "-h --help --license --modelfile --parameters --system --template" -- "${current}") )
                ;;
            'run')
                # Dynamically generate suggestions for 'podman-ollama run' from
                # 'podman-ollama ls' or 'podman-ollama list'.
                lineNumber=0
                while IFS= read -r line; do
                ((lineNumber++))
                # Skip the first line
                if [ "$lineNumber" -eq 1 ]; then
                continue
                fi
                    models+=("$(echo "${line}" | awk '{print $1}' | sed 's/:latest$//')")
                done < <(podman-ollama list 2>/dev/null || podman-ollama ls 2>/dev/null)
                COMPREPLY=( $(compgen -W "${models[*]}" -- "${current}") )
                ;;
            'pull' | 'push')
                COMPREPLY=( $(compgen -W "-h --help --insecure" -- "${current}") )
                ;;
            'list' | 'ls')
                COMPREPLY=( $(compgen -W "-h --help" -- "${current}") )
                ;;
            'cp')
                COMPREPLY=( $(compgen -W "-h --help" -- "${current}") )
                ;;
            'rm')
                COMPREPLY=( $(compgen -W "-h --help" -- "${current}") )
                ;;
        esac
    fi
}

# Register the autocomplete function for the 'ollama' command.
complete -F __podman_ollama_autocomplete podman-ollama

